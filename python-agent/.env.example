# =============================================================================
# Microsoft Agent Framework - Python Agent Configuration
# =============================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to version control!

# =============================================================================
# Azure OpenAI Configuration (REQUIRED for Agent Framework)
# =============================================================================
# Get these values from Azure Portal > Your OpenAI Resource

# Your Azure OpenAI endpoint URL (base URL only, no /openai/deployments/...)
# Example: https://your-resource.openai.azure.com/
# For your deployment: https://94aha-mgifb7v4-eastus2.cognitiveservices.azure.com/
AZURE_OPENAI_ENDPOINT=https://94aha-mgifb7v4-eastus2.cognitiveservices.azure.com/

# The deployment name of your model (created in Azure OpenAI Studio)
# Common deployments: gpt-4, gpt-4o, gpt-4o-mini, gpt-35-turbo, gpt-5-nano
# For your deployment: gpt-5-nano
AZURE_OPENAI_DEPLOYMENT=gpt-5-nano

# API version for Azure OpenAI
# Use the version from your endpoint
AZURE_OPENAI_API_VERSION=2025-01-01-preview

# API Key (OPTIONAL - only needed if not using Azure authentication)
# Leave empty to use DefaultAzureCredential (recommended)

AZURE_OPENAI_API_KEY=

# =============================================================================
# Azure Authentication (for production deployments)
# =============================================================================
# For local development, use `az login` - no credentials needed in .env
# For Azure deployments, use Managed Identity - no credentials needed in .env

# Only set these if you need service principal authentication
# AZURE_CLIENT_ID=
# AZURE_CLIENT_SECRET=
# AZURE_TENANT_ID=

# =============================================================================
# Agent Configuration
# =============================================================================

# The name of your agent (shown in logs and responses)
AGENT_NAME=PythonSpecializedAgent

# System instructions for your agent
# Define the agent's role, capabilities, and behavior
AGENT_INSTRUCTIONS=You are a specialized Python agent that helps with data analysis, machine learning, and Python ecosystem tasks. You have access to tools for weather information, calculations, and file searching.

# =============================================================================
# API Server Configuration
# =============================================================================

# Port for the FastAPI server
API_PORT=8000

# Host binding (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
API_HOST=0.0.0.0

# Enable authentication (set to 'true' for production)
# When false, endpoints are publicly accessible
REQUIRE_AUTH=false

# =============================================================================
# Authentication & Authorization (Phase 3 - Optional)
# =============================================================================
# These are only needed if implementing JWT/OBO authentication flow

# Azure AD Tenant ID
# AZURE_TENANT_ID=

# Azure AD Client ID (for the API application)
# AZURE_CLIENT_ID=

# Azure AD Client Secret (for OBO flow)
# AZURE_CLIENT_SECRET=

# JWT validation settings
# JWT_ALGORITHM=RS256
# JWT_AUDIENCE=api://your-api-client-id
# JWT_ISSUER=https://login.microsoftonline.com/{tenant-id}/v2.0

# =============================================================================
# Logging Configuration (Optional)
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Enable detailed agent execution logs
AGENT_DEBUG=false

# =============================================================================
# Advanced Settings (Optional)
# =============================================================================

# Maximum conversation history length (tokens)
# MAX_CONVERSATION_HISTORY=4000

# Default temperature for LLM responses (0.0 to 1.0)
# LLM_TEMPERATURE=0.7

# Request timeout in seconds
# REQUEST_TIMEOUT=60

# =============================================================================
# Environment-Specific Overrides
# =============================================================================

# Environment name (development, staging, production)
ENVIRONMENT=development

# Enable CORS for local development
# CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# =============================================================================
# Quick Start Guide
# =============================================================================
#
# MINIMUM CONFIGURATION FOR LOCAL DEVELOPMENT:
# 1. Set AZURE_OPENAI_ENDPOINT to your Azure OpenAI resource URL
# 2. Set AZURE_OPENAI_DEPLOYMENT to your model deployment name
# 3. Run `az login` to authenticate
# 4. That's it! Start the server with: uvicorn src.main:app --reload
#
# AUTHENTICATION OPTIONS:
# - Local Dev: Use `az login` (DefaultAzureCredential will use it automatically)
# - Azure Deployment: Use Managed Identity (configured at deployment time)
# - Service Principal: Set AZURE_CLIENT_ID, AZURE_CLIENT_SECRET, AZURE_TENANT_ID
# - API Key: Set AZURE_OPENAI_API_KEY (not recommended for production)
#
# VERIFY YOUR SETUP:
# curl http://localhost:8000/health
# curl http://localhost:8000/agent
#
# TEST THE AGENT:
# curl -X POST http://localhost:8000/agent \
#   -H "Content-Type: application/json" \
#   -d '{"message": "What is the weather in Seattle?"}'
#
# =============================================================================
